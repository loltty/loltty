#!/bin/mksh
#-
# Copyright © 2016
#	mirabilos <m@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Reimplementation of lolcat’s most basic feature to test my concept
# (doesn’t handle combining characters yet, or terminal codes)

# from gen/rgbs.sh
set -A col_r -- 128 165 199 227 246 254 251 237 213 182 145 107 71 40 17 3 1 10 29 58 92 130 167 201 228 247 254 251 236 212 180 143 105 69 39 16 3 1 11 31 59 94 132 169 203 230 247 254 250 235 210 178 141 103 68 37 15 3 1 12 32 61 96 134 171 204 231 248 254 250 234 208 176 139 101 66 36 14 2 2 12 34 63 98 136 173 206 232 249 254 249 233 207 174 137 99 64 34 13 2 2 13 35 65 100 138 175 208 233 249 254 248 231 205 172 135 97 62 33 12 2 2 14 36 67 102 140 177 209 234 250 254 248 230 203 170 133 95 60 31 11 1 3 15 38 69 104 142 179 211 236 250 254 247 229 202 168 131 93 58 30 10 1 3 16 40 70 107 145 181 213 237 251 254 246 228 200 166 128 91 57 29 9 1 4 17 41 72 109 147 183 214 238 251 254 245 226 198 164 126 89 55 27 9 1 4 19 43 74 111 149 185 216 239 252 254 245 225 196 162 124 87 53 26 8 1 5 20 44 76 113 151 187 217 240 252 254 244 223 195 160 122 85 51 25 7 1 5 21 46 78 115 153 189 219 241 253 253 243 222 193 158 120 83 50 23 7 1 6 22 48 80 117 155 190 220 242 253 253 242 221 191 156 118 81 48 22 6 1 6 23 49 82 119 157 192 222 243 253 253 241 219 189 154 116 79 46 21 5 1 7 24 51 84 121 159 194 223 244 254 252 240 218 187 151 113 77 45 20 5 1 8 26 53 86 124 161 196 224 244 254 252 239 216 185 149 111 75 43 19 4 1 8 27 54 88 126 163 198 226 245 254 252 238 215 183 147 109 73 41 18 4 1 9 28 56 90
set -A col_g -- 237 214 182 146 108 72 41 17 4 1 10 29 57 91 129 166 200 228 246 254 251 236 212 180 144 106 70 39 16 3 1 10 30 59 93 131 168 202 229 247 254 250 235 211 179 142 104 68 38 15 3 1 11 32 61 95 133 170 204 230 248 254 250 234 209 177 140 102 66 36 14 2 2 12 33 62 98 135 172 206 232 248 254 249 233 207 175 138 100 64 35 13 2 2 13 35 64 100 137 174 207 233 249 254 249 232 206 173 136 98 63 33 12 2 2 14 36 66 102 140 176 209 234 250 254 248 231 204 171 133 96 61 32 11 1 3 15 37 68 104 142 178 210 235 250 254 247 229 202 169 131 94 59 30 11 1 3 16 39 70 106 144 180 212 236 251 254 246 228 201 167 129 92 57 29 10 1 3 17 41 72 108 146 182 214 237 251 254 246 227 199 165 127 89 55 28 9 1 4 18 42 74 110 148 184 215 238 252 254 245 225 197 162 125 87 54 26 8 1 4 19 44 76 112 150 186 217 239 252 254 244 224 195 160 123 85 52 25 7 1 5 20 45 78 114 152 188 218 240 253 254 243 223 193 158 121 83 50 24 7 1 6 22 47 80 116 154 190 220 241 253 253 242 221 192 156 118 81 48 23 6 1 6 23 49 82 119 156 192 221 242 253 253 241 220 190 154 116 79 47 21 6 1 7 24 50 84 121 159 194 223 243 254 253 240 218 188 152 114 77 45 20 5 1 8 25 52 86 123 161 195 224 244 254 252 239 217 186 150 112 76 44 19 4 1 8 26 54 88 125 163 197 225 245 254 252 238 215 184 148 110 74 42 18 4 1 9 28 55 90 127 165 199 227 246 254 251
set -A col_b -- 18 4 1 9 28 56 91 128 166 200 227 246 254 251 237 213 181 145 107 71 40 16 3 1 10 30 58 93 130 168 202 229 247 254 251 236 211 179 143 105 69 38 15 3 1 11 31 60 95 132 170 203 230 248 254 250 235 210 177 140 103 67 37 14 2 2 12 33 62 97 135 172 205 231 248 254 249 233 208 175 138 100 65 35 13 2 2 13 34 64 99 137 174 207 232 249 254 249 232 206 173 136 98 63 34 13 2 2 14 35 65 101 139 176 208 234 250 254 248 231 205 171 134 96 61 32 12 1 2 15 37 67 103 141 178 210 235 250 254 247 230 203 169 132 94 60 31 11 1 3 16 38 69 105 143 180 212 236 251 254 247 228 201 167 130 92 58 29 10 1 3 17 40 71 107 145 182 213 237 251 254 246 227 199 165 128 90 56 28 9 1 4 18 42 73 109 147 184 215 238 252 254 245 226 198 163 126 88 54 27 8 1 4 19 43 75 112 149 185 216 239 252 254 244 224 196 161 123 86 52 26 8 1 5 20 45 77 114 152 187 218 240 252 254 243 223 194 159 121 84 51 24 7 1 5 21 46 79 116 154 189 219 241 253 253 243 222 192 157 119 82 49 23 6 1 6 22 48 81 118 156 191 221 242 253 253 242 220 190 155 117 80 47 22 6 1 7 24 50 83 120 158 193 222 243 253 253 241 219 188 153 115 78 46 21 5 1 7 25 51 85 122 160 195 224 244 254 252 240 217 187 151 113 76 44 20 5 1 8 26 53 87 124 162 197 225 245 254 252 239 216 185 149 111 74 43 18 4 1 9 27 55 89 126 164 198 226 245 254 251 238 214 183 146 109 72 41
ncols=${#col_r[*]}

spread=8
typeset -U index=$RANDOM

set -U # assume UTF-8 input
cat "$@" | while IFS= read -r line; do
	n=${#line}
	i=-1
	while (( ++i < n )); do
		((# c = (index + i / spread) % ncols ))
		print -n "\e[38;2;${col_r[c]};${col_g[c]};${col_b[c]}m"
		print -nr -- "${line: i: 1}"
	done
	print '\e[0m'
	let ++index
done
